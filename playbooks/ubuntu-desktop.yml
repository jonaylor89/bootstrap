- name: Ubuntu Desktop Configuration
  hosts: localhost
  vars:
    - login_shell: /usr/bin/zsh
    - dotfiles_remote: jonaylor89/dotfiles
    - dotfiles_home: "{{ ansible_env.HOME }}/Repos/dotfiles"
  pre_tasks:
    - name: Pull Configurations
      file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: directory
      with_items:
        - Repos 
        - bins
  tasks:
    - name: Install apt packages
      include_role:
        name: apt
      ignore_errors: true

    - name: Install snap packages
      include_role:
        name: snap
      ignore_errors: true

    - name: Install rust
      include_role:
        name: rust
      ignore_errors: true

    - name: Python Package Manager
      include_role:
        name: pip
      ignore_errors: true

    - name: install startship.rs
      shell: "{{ ansible_env.HOME }}/.cargo/bin/cargo install starship"
      ignore_errors: true

    - name: configure zsh 
      include_role:
        name: zsh

    - name: Install oh-my-fish
      git:
        repo: https://github.com/oh-my-fish/oh-my-fish.git
        dest: "{{ ansible_env.HOME }}/.local/share/omf"
        update: yes
      ignore_errors: true

    - name: Install tmux plugin manager
      git:
        repo: https://github.com/tmux-plugins/tpm.git
        dest: "{{ ansible_env.HOME }}/.local/share/tpm"
        update: yes
      ignore_errors: true

    - name: Install dein.vim
      git:
        repo: https://github.com/Shougo/dein.vim.git
        dest: "{{ ansible_env.HOME }}/.cache/dein/repos/github.com/Shougo/dein.vim"
        update: yes
      ignore_errors: true

    - name: check if preferred login_shell is installed
      stat: path={{ login_shell }}
      register: login_shell_installed
      ignore_errors: true

    - name: Set default shell
      user:
        name: "{{ ansible_user_id }}"
        shell: "{{ login_shell }}"
      # when: login_shell_installed.stat.exists
      become: yes
      ignore_errors: true

    - name: Link vimrc
      file:
        src: "{{ dotfiles_home }}/vimrc"
        dest: "{{ ansible_env.HOME }}/.vimrc"
        state: link
        force: true
      ignore_errors: true

    - name: Link zshrc
      file:
        src: "{{ dotfiles_home }}/zshrc"
        dest: "{{ ansible_env.HOME }}/.zshrc"
        state: link
        force: true
      ignore_errors: true

    - name: Link bashrc
      file:
        src: "{{ dotfiles_home }}/bashrc"
        dest: "{{ ansible_env.HOME }}/.bashrc"
        state: link
        force: true
      ignore_errors: true

    - name: Create alacritty config location
      file:
        path: "{{ ansible_env.HOME }}/.config/alacritty"
        state: directory

    - name: Link alacritty yml
      file:
        src: "{{ dotfiles_home }}/alacritty.yml"
        dest: "{{ ansible_env.HOME }}/.config/alacritty/alacritty.yml"
        state: link
        force: true
      ignore_errors: true

    - name: Link gitconfig
      file:
        src: "{{ dotfiles_home }}/gitconfig"
        dest: "{{ ansible_env.HOME }}/.gitconfig"
        state: link
        force: true
      ignore_errors: true

    - name: Link pypirc
      file:
        src: "{{ dotfiles_home }}/pypirc"
        dest: "{{ ansible_env.HOME }}/.pypirc"
        state: link
        force: true
      ignore_errors: true

    - name: Create starship config location
      file:
        path: "{{ ansible_env.HOME }}/.config/starship"
        state: directory

    - name: Link startship.toml
      file:
        src: "{{ dotfiles_home }}/starship.toml"
        dest: "{{ ansible_env.HOME }}/.config/starship/starship.toml"
        state: link
        force: true
      ignore_errors: true
